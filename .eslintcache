[{"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\index.js":"1","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\App.js":"2","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\reportWebVitals.js":"3","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Book\\Book.js":"4","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\LogIn\\LogIn.js":"5","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Home\\Home.js":"6","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Header\\Header.js":"7","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Room\\Room.js":"8","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\LogIn\\firebase.config.js":"9","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\PrivateRoute\\PrivateRoute.js":"10","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Bookings\\Bookings.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1147,"mtime":1609603255561,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":3268,"mtime":1611547575639,"results":"16","hashOfConfig":"13"},{"size":2082,"mtime":1611595209575,"results":"17","hashOfConfig":"13"},{"size":1950,"mtime":1609245300451,"results":"18","hashOfConfig":"13"},{"size":1149,"mtime":1609245231661,"results":"19","hashOfConfig":"13"},{"size":2628,"mtime":1609246003346,"results":"20","hashOfConfig":"13"},{"size":365,"mtime":1609251276339,"results":"21","hashOfConfig":"13"},{"size":624,"mtime":1609604554401,"results":"22","hashOfConfig":"13"},{"size":1000,"mtime":1611595325787,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1fud5ly",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\index.js",[],["52","53"],"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\App.js",["54"],"import React, { createContext, useContext, useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport Home from './Components/Home/Home';\nimport LogIn from './Components/LogIn/LogIn';\nimport Book from './Components/Book/Book';\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\n\n\n export const UserContext = createContext();\n\nfunction App() {\n\n  const [loggedInUser, setLoggedInUser] = useState({})\n  return (\n    <UserContext.Provider value = {[loggedInUser, setLoggedInUser]}>\n      <h1> name: {loggedInUser.displayName}</h1>\n      <Router>\n          <Header/>\n          <Switch>\n            <Route path=\"/home\">\n              <Home/>\n            </Route>\n            <Route path=\"/login\">\n              <LogIn/>\n            </Route>\n            <PrivateRoute path=\"/book/:bedType\">\n             <Book/>\n            </PrivateRoute>\n            <Route exact path=\"/\">\n              <Home />\n            </Route> \n          </Switch>\n      </Router>\n      </UserContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\reportWebVitals.js",[],"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Book\\Book.js",["55"],"import React, { useContext, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { Button } from '@material-ui/core';\r\nimport Bookings from '../Bookings/Bookings';\r\n\r\n\r\nconst Book = () => {\r\n    const { bedType } = useParams();\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n    // The first commit of Material-UI\r\n    const [selectedDate, setSelectedDate] = useState({\r\n        CheekIn: new Date(),\r\n        CheckOut: new Date()\r\n    })\r\n    console.log(selectedDate)\r\n\r\n    const handleCheckInDate = (date) => {\r\n        \r\n       const newDatesIn = {...selectedDate}\r\n       newDatesIn.CheekIn = date\r\n       setSelectedDate(newDatesIn)\r\n    };\r\n    \r\n    const handleCheckOutDate = (date) => {\r\n        const newDatesOut = {...selectedDate.CheckOut}\r\n        newDatesOut.CheekOut = date\r\n        setSelectedDate(newDatesOut)\r\n     };\r\n\r\n     const BookingServer = () =>{\r\n        const BookingData = {...loggedInUser, ...selectedDate}\r\n        fetch(\"http://localhost:5000/addBooking\",{\r\n            method:\"POST\",\r\n            headers:{'Content-Type' : 'application/json'},\r\n            body: JSON.stringify(BookingData)\r\n        })\r\n        .then( res => res.json()\r\n        .then(data => {\r\n            console.log(data)\r\n        }))\r\n     }\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <h1>Hello,{loggedInUser.displayName} Let's book a {bedType} Room.</h1>\r\n            <p>Want a <Link to=\"/home\">different room?</Link> </p>\r\n\r\n\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid container justify=\"space-around\">\r\n                    <KeyboardDatePicker\r\n                        disableToolbar\r\n                        variant=\"inline\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Date picker inline\"\r\n                        value={selectedDate.CheekIn}\r\n                        onChange={handleCheckInDate}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                    <KeyboardDatePicker\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-dialog\"\r\n                        label=\"Date picker dialog\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={selectedDate.CheckOut}\r\n                        onChange={handleCheckOutDate}\r\n                        KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                        }}\r\n                    />\r\n                \r\n                </Grid>\r\n                <Button onClick={()=>BookingServer()} variant=\"contained\" color=\"primary\">\r\n                        Selct Date\r\n                    </Button>\r\n            </MuiPickersUtilsProvider>\r\n            <Bookings></Bookings>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Book;","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\LogIn\\LogIn.js",["56","57","58","59","60","61"],"import React, { useContext } from 'react';\r\nimport firebaseConfig from './firebase.config';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from '../../App';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nconst LogIn = () => {\r\n\r\n  var provider = new firebase.auth.GoogleAuthProvider();\r\n  const [loggedInUser, setloggedInUser] = useContext(UserContext);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n  const handleSingIn = () => {\r\n\r\n    firebase.auth().signInWithPopup(provider).then(function (result) {\r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      var token = result.credential.accessToken;\r\n      // The signed-in user info.\r\n      var { displayName, email } = result.user;\r\n      var singedInUser = { displayName, email }\r\n      setloggedInUser(singedInUser)\r\n      StoreTokenAuth()\r\n      \r\n      // console.log(displayName, email)\r\n      // ...  \r\n    }).catch(function (error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n    });\r\n  }\r\n\r\n      const StoreTokenAuth = () => {\r\n            firebase.auth().currentUser.getIdToken(/* forceRefresh */ true)\r\n            .then(function (idToken) {\r\n              sessionStorage.setItem('token',idToken)\r\n              history.replace(from)\r\n              // Send token to your backend via HTTPS\r\n              // ...\r\n            }).catch(function (error) {\r\n              // Handle error\r\n            });\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>This is Login</h1>\r\n      <button onClick={() => handleSingIn()}>Sing in With google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Home\\Home.js",[],"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Header\\Header.js",[],"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Room\\Room.js",[],"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\LogIn\\firebase.config.js",[],"C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\PrivateRoute\\PrivateRoute.js",["62"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const  [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n        <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n      loggedInUser.email ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\web development\\projects\\burj-al-arab\\hotel-booking\\src\\Components\\Bookings\\Bookings.js",["63"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { UserContext } from '../../App';\r\n\r\nconst Bookings = () => {\r\n\r\n     const [bookData, setbookData] = useState([])\r\n     const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n\r\n     useEffect(() =>{\r\n         fetch('http://localhost:5000/booking?email='+loggedInUser.email,{\r\n             method: 'GET',\r\n             headers:{\r\n                 'Content-Type' : 'application/json',\r\n                 authorization : `Bearer ${sessionStorage.getItem('token')}`\r\n             }\r\n         })\r\n         .then(result => result.json())\r\n         .then(data => setbookData(data))\r\n     })\r\n     \r\n    return (\r\n        <div>\r\n           <h3>Total booking {bookData.length}</h3>\r\n           {\r\n               bookData.map(book => <li key={book._id}>{book.displayName} {book.email} {new Date(book.CheekIn).toDateString('dd/MM/yyyy')} {book.CheckOut}</li>)\r\n           }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Bookings;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":32,"nodeType":"70","messageId":"71","endLine":1,"endColumn":42},{"ruleId":"68","severity":1,"message":"72","line":16,"column":26,"nodeType":"70","messageId":"71","endLine":16,"endColumn":41},{"ruleId":"68","severity":1,"message":"73","line":17,"column":10,"nodeType":"70","messageId":"71","endLine":17,"endColumn":22},{"ruleId":"68","severity":1,"message":"74","line":25,"column":11,"nodeType":"70","messageId":"71","endLine":25,"endColumn":16},{"ruleId":"68","severity":1,"message":"75","line":36,"column":11,"nodeType":"70","messageId":"71","endLine":36,"endColumn":20},{"ruleId":"68","severity":1,"message":"76","line":37,"column":11,"nodeType":"70","messageId":"71","endLine":37,"endColumn":23},{"ruleId":"68","severity":1,"message":"77","line":39,"column":11,"nodeType":"70","messageId":"71","endLine":39,"endColumn":16},{"ruleId":"68","severity":1,"message":"78","line":41,"column":11,"nodeType":"70","messageId":"71","endLine":41,"endColumn":21},{"ruleId":"68","severity":1,"message":"72","line":6,"column":27,"nodeType":"70","messageId":"71","endLine":6,"endColumn":42},{"ruleId":"68","severity":1,"message":"72","line":7,"column":27,"nodeType":"70","messageId":"71","endLine":7,"endColumn":42},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'setLoggedInUser' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","'token' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]